diff a/testbed/lib/pages/result.dart b/testbed/lib/pages/result.dart	(rejected hunks)
@@ -2,13 +2,16 @@
 import 'package:json_annotation/json_annotation.dart';
 import 'package:file_utils/file_utils.dart';
 import 'package:flutter/services.dart';
-
+import 'package:flutter_material_pickers/flutter_material_pickers.dart';
 import 'package:flutter_file_dialog/flutter_file_dialog.dart';
 import 'dart:io';
 import 'package:excel/excel.dart';
 import 'package:testbed/pages/inputWidget.dart';
 import 'dart:convert';
 import '../constant.dart';
+import '../constant.dart';
+import '../constant.dart';
+import '../constant.dart';
 import 'dormForm.dart';
 import './resultData/dormData.dart';
 
@@ -23,11 +26,13 @@
 class _ResultState extends State<Result> with SingleTickerProviderStateMixin {
   
   // deal with tab
-  TabController controller;
+  // TabController controller;
 
   DormData dormData;
   InputWidget inputFileName;
 
+  String selectedDorm = boyDorm;
+
   _ResultState()
   {
     // this.dormData = DormData(testData);
@@ -35,17 +40,17 @@
   }
   
 
-  @override
-  void initState() {
-    super.initState();
-    controller = new TabController(vsync: this, length: 4);
-  }
+  // @override
+  // void initState() {
+  //   super.initState();
+  //   controller = new TabController(vsync: this, length: 4);
+  // }
 
-  @override
-  void dispose() {
-    controller.dispose();
-    super.dispose();
-  }
+  // @override
+  // void dispose() {
+  //   controller.dispose();
+  //   super.dispose();
+  // }
 
   void _showDialog() {
     // flutter defined function
@@ -73,10 +78,10 @@
   @override
   Widget build(BuildContext context) {
     // extract result data
-    final arguments = ModalRoute.of(context).settings.arguments as Map;
-    final result = arguments['result'];
-    print(result.keys);
-    this.dormData = DormData(result);
+    // final arguments = ModalRoute.of(context).settings.arguments as Map;
+    // final result = arguments['result'];
+
+    this.dormData = DormData(jsonDecode(testData));
 
     return Scaffold(
       backgroundColor: Colors.white,
@@ -95,7 +100,25 @@
         centerTitle: false,
         backgroundColor: Colors.indigo[700],
         elevation: 0.0,
-        actions: <Widget>[Container(
+        actions: <Widget>[
+          Container(
+            padding: EdgeInsets.all(10),
+            child: RaisedButton(
+            padding: EdgeInsets.all(0),
+            onPressed: (){
+              showMaterialScrollPicker(
+                context: context,
+                title: "選擇宿舍",
+                items: chi_dataName,
+                selectedItem: this.selectedDorm, 
+                onChanged: (value) => setState(() => this.selectedDorm = value),
+              );
+            }, 
+            child: Text('其他宿舍結果', style: TextStyle(fontSize: 14)),
+            color: Colors.amber[300]
+          )),
+          // botton
+          Container(
             padding: EdgeInsets.all(10),
             child: RaisedButton(
             padding: EdgeInsets.all(0),
@@ -105,6 +128,7 @@
             child: Text('變更儲存檔名', style: TextStyle(fontSize: 14)),
             color: Colors.amber[300]
           )), 
+          // botton
           Container(
             padding: EdgeInsets.all(10),
             child: RaisedButton(
@@ -115,29 +139,10 @@
             child: Text('匯出全部資料', style: TextStyle(fontSize: 14)),
             color: Colors.amber[300]
           ))], 
-        bottom: new TabBar(
-          controller: controller,
-          tabs: <Tab>[
-            new Tab(text: chi_boyDorm),
-            new Tab(text: chi_girlDorm),
-            new Tab(text: chi_bot_boy),
-            new Tab(text: chi_bot_girl),
-          ]
-        )
-
-
       ),
       
       // body
-      body: TabBarView(
-        controller: controller,
-        children: <Widget>[
-          dormData.dormData[boyDorm],
-          dormData.dormData[girlDorm],
-          dormData.dormData[bot_boy], 
-          dormData.dormData[bot_girl]
-        ]
-      ),
+      body:dormData.dormData[dorm_chi2eng[this.selectedDorm]]
       // bottomNavigationBar: Text(jsonDecode(testing)),
     );
   }
